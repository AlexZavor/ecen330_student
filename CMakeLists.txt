cmake_minimum_required (VERSION 3.14.5)

project(ecen330)

if (BOARD)
    # These are the options used to compile and run on the physical Zybo board    
    # You will need to compile using "cmake -DBOARD=1"
    # This sets up options for the ARM compiler
    include(xil_arm_toolchain/toolchain.cmake)

    # Places to search for .h header files
    include_directories(.)
    include_directories("xil_arm_toolchain/bsp/ps7_cortexa9_0/include")

    # link_directories instructs the compiler where it should look for libraries.
    link_directories(xil_arm_toolchain)
    add_subdirectory(supportFiles)

    set(XIL_VITIS_PATH /opt/Xilinx/Vitis/2019.2)
else()
    # These options are required if you want to use the Zybo board emulator    
    include (emulator/emu.cmake)
    include_directories(emulator)
    link_directories(emulator)
    add_subdirectory(emulator/supportFiles)
endif()

# Subdirectories to look for other CMakeLists.txt files
add_subdirectory(lab1)

# The rest of this file is to add custom targets to the Makefile that is generated by CMake.

# make BOOT.bin ELF_PATH=...
# This target is used to create SD card images (ECEN 390 only).
add_custom_target(BOOT.bin)
add_custom_command(TARGET BOOT.bin
    COMMAND if [ -z \${ELF_PATH} ]\; then echo '\\033[0;31mYou need to specify an ELF_PATH.  For example: make BOOT.bin ELF_PATH=lab1/lab1.elf\\033[0m'\;exit 1\; fi
    COMMAND if [ ! -f \${ELF_PATH} ]\; then echo '\\033[0;31mThe file \${ELF_PATH} does not exist.\\033[0m'\;exit 1\; fi
    COMMAND ${XIL_VITIS_PATH}/bin/sdcard_gen --xpfm ../hw/platform/330_platform.xpfm --sys_config 330_platform --bif ../hw/platform/sw/330_platform/boot/330_platform.bif --bitstream ../hw/330_hw_system.bit --elf \${ELF_PATH},ps7_cortexa9_0
)

# Add commands to zip source files
# -MM = must match (error if source file does not exist)
# -j = junk paths (store all files flat in zip archive)
add_custom_target(zipLab2)
add_custom_command(TARGET zipLab2 COMMAND zip -MM -j ../lab2/\${USER}_lab2.zip ../lab2/main.c ../my_libs/switches.c ../my_libs/buttons.c)

add_custom_target(zipLab3)
add_custom_command(TARGET zipLab3 COMMAND zip -MM -j ../lab3/\${USER}_lab3.zip ../lab3/main.c ../my_libs/intervalTimer.c)

add_custom_target(zipLab4)
add_custom_command(TARGET zipLab4 COMMAND zip -MM -j ../lab4/\${USER}_lab4.zip ../lab4/clockControl.c ../lab4/clockDisplay.c)

add_custom_target(zipLab5)
add_custom_command(TARGET zipLab5 COMMAND zip -MM -j ../lab5/\${USER}_lab5.zip ../lab5/minimax.c ../lab5/ticTacToeDisplay.c ../lab5/ticTacToeControl.c)

add_custom_target(zipLab6)
add_custom_command(TARGET zipLab6 COMMAND zip -MM -j ../lab6/\${USER}_lab6.zip ../lab6/buttonHandler.c ../lab6/flashSequence.c ../lab6/globals.c ../lab6/main.c ../lab6/simonControl.c ../lab6/simonDisplay.c ../lab6/verifySequence.c)

add_custom_target(zipLab7)
add_custom_command(TARGET zipLab7 COMMAND zip -MM -j ../lab7\${USER}_lab7.zip ../lab7/wamControl.c ../lab7/wamDisplay.c ../lab7/wamMain.c)